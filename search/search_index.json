{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WorldPingVisualizer WorldPingVisualizer is a TShock plugin for adding visual effects to map pings Features Shows CombatText at ping locations Shows Particles at ping locations Supports TShock /reload Screenshots","title":"Index"},{"location":"#worldpingvisualizer","text":"WorldPingVisualizer is a TShock plugin for adding visual effects to map pings","title":"WorldPingVisualizer"},{"location":"#features","text":"Shows CombatText at ping locations Shows Particles at ping locations Supports TShock /reload","title":"Features"},{"location":"#screenshots","text":"","title":"Screenshots"},{"location":"LICENSE/","text":"MIT No Attribution Copyright 2021 Arthri Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"development/","text":"Development Prequisites .NET 5 and CLI To make development easier, this project uses Paket as a dependency manager on top of NuGet. At the time of writing, TShock doesn't officially support NuGet packages yet, so the project acquires TShock dependencies over HTTPS. This project assumes you have the .NET 5 SDK and the dotnet CLI .NET 4.7.2 Targetting Pack The project targets .NET Framework 4.7.2. So .NET Framework 4.7.2 is required to compile this project via Visual Studio Setup Dependencies Restore dotnet tools(run dotnet tool restore ) Restore dependencies(run dotnet paket restore ) Compile w/Visual Studio Open WorldPingVisualizer.sln Build solution Compile w/dotnet CLI Navigate to project root directory Run dotnet build Get Compiled Files Navigate to src/WorldPingVisualizer/bin/{BUILD_CONFIGURATION}/ where {BUILD_CONFIGURATION} is either Debug or Release Do stuff with files","title":"Development"},{"location":"development/#development","text":"","title":"Development"},{"location":"development/#prequisites","text":"","title":"Prequisites"},{"location":"development/#net-5-and-cli","text":"To make development easier, this project uses Paket as a dependency manager on top of NuGet. At the time of writing, TShock doesn't officially support NuGet packages yet, so the project acquires TShock dependencies over HTTPS. This project assumes you have the .NET 5 SDK and the dotnet CLI","title":".NET 5 and CLI"},{"location":"development/#net-472-targetting-pack","text":"The project targets .NET Framework 4.7.2. So .NET Framework 4.7.2 is required to compile this project via Visual Studio","title":".NET 4.7.2 Targetting Pack"},{"location":"development/#setup-dependencies","text":"Restore dotnet tools(run dotnet tool restore ) Restore dependencies(run dotnet paket restore )","title":"Setup Dependencies"},{"location":"development/#compile-wvisual-studio","text":"Open WorldPingVisualizer.sln Build solution","title":"Compile w/Visual Studio"},{"location":"development/#compile-wdotnet-cli","text":"Navigate to project root directory Run dotnet build","title":"Compile w/dotnet CLI"},{"location":"development/#get-compiled-files","text":"Navigate to src/WorldPingVisualizer/bin/{BUILD_CONFIGURATION}/ where {BUILD_CONFIGURATION} is either Debug or Release Do stuff with files","title":"Get Compiled Files"},{"location":"installation/","text":"Installation From GitHub Download latest release Put the zip in your server's ServerPlugins folder Unzip the zip","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#from-github","text":"Download latest release Put the zip in your server's ServerPlugins folder Unzip the zip","title":"From GitHub"},{"location":"third-party-notices/","text":"Copyright Notices Third-party content Third-party content and materials are the intellectual property of their respective owners.","title":"Copyright"},{"location":"third-party-notices/#copyright-notices","text":"","title":"Copyright Notices"},{"location":"third-party-notices/#third-party-content","text":"Third-party content and materials are the intellectual property of their respective owners.","title":"Third-party content"},{"location":"usage/","text":"Usage via Terraria Open full map(press M or Full Map key) Double click somewhere to create a ping The ping will be registered and visualized. Anyone near it will see the visualizations Note Pings have a default life time of 15 seconds. At the time of writing, this is unchangeable, both in the vanilla client and the plugin via API Registering a Ping using Terraria.Map ; using WorldVisualizerPlugin ; var ping = new PingMapLayer . Ping ( position ); WorldPingVisualizer . Instance . Pings . Add ( ping ); The above will register a ping that will expire approximately 15 seconds from now. Showing Particles at a Ping using WorldVisualizerPlugin ; using WorldVisualizerPlugin.Extensions ; var type = /* */ ; var ping = WorldPingVisualizer . Instance . Pings ...; // Do LINQ stuff or give index to list ping . ShowParticles ( type ); type must be one of Particle Types Showing Combat Text at a Ping using WorldVisualizerPlugin ; using WorldVisualizerPlugin.Extensions ; var text = \"PONG!\" ; var color = 0 xFFFF00u ; var ping = WorldPingVisualizer . Instance . Pings ...; // Do LINQ stuff or give index to list ping . ShowCombatText ( NetworkText . FromLiteral ( text ), color ); text can be any message. If you have experience with NetworkText , you can also use other types like FromFormattable and FromKey color must be a uint representing the packed value of a Color in ARGB format. Tip Use the hexadecimal notation, e.g.: 0xFFFF00 for #FFFF00 or yellow 0xFF00FF for #FF00FF or magenta","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#via-terraria","text":"Open full map(press M or Full Map key) Double click somewhere to create a ping The ping will be registered and visualized. Anyone near it will see the visualizations Note Pings have a default life time of 15 seconds. At the time of writing, this is unchangeable, both in the vanilla client and the plugin","title":"via Terraria"},{"location":"usage/#via-api","text":"","title":"via API"},{"location":"usage/#registering-a-ping","text":"using Terraria.Map ; using WorldVisualizerPlugin ; var ping = new PingMapLayer . Ping ( position ); WorldPingVisualizer . Instance . Pings . Add ( ping ); The above will register a ping that will expire approximately 15 seconds from now.","title":"Registering a Ping"},{"location":"usage/#showing-particles-at-a-ping","text":"using WorldVisualizerPlugin ; using WorldVisualizerPlugin.Extensions ; var type = /* */ ; var ping = WorldPingVisualizer . Instance . Pings ...; // Do LINQ stuff or give index to list ping . ShowParticles ( type ); type must be one of Particle Types","title":"Showing Particles at a Ping"},{"location":"usage/#showing-combat-text-at-a-ping","text":"using WorldVisualizerPlugin ; using WorldVisualizerPlugin.Extensions ; var text = \"PONG!\" ; var color = 0 xFFFF00u ; var ping = WorldPingVisualizer . Instance . Pings ...; // Do LINQ stuff or give index to list ping . ShowCombatText ( NetworkText . FromLiteral ( text ), color ); text can be any message. If you have experience with NetworkText , you can also use other types like FromFormattable and FromKey color must be a uint representing the packed value of a Color in ARGB format. Tip Use the hexadecimal notation, e.g.: 0xFFFF00 for #FFFF00 or yellow 0xFF00FF for #FF00FF or magenta","title":"Showing Combat Text at a Ping"},{"location":"Configuration/","text":"Configuration WorldPingVisualizer allows you to configure a number of options, such as how often pings are visualized, or how the visualizations look Configuration Path By default, the plugin save path is {Working Directory}/config/WorldPingVisualizer/ Configuration Options metadata This is used by LrndefLib . Please do not touch this unless you know what you are doing particles enabled Set to true to enable particles at ping locations particlesIntervalMilliseconds The interval(in milliseconds) to broadcast particles Examples: 1000 for 1 second 1500 for 1.5 seconds 2000 for 2 seconds 36000 for 36 seconds particleType The type of particles to broadcast. More on particle types here combatText enabled Set to true to enable combat text at ping locations combatTextIntervalMilliseconds The interval(in milliseconds) to broadcast combat text Examples: 1000 for 1 second 1500 for 1.5 seconds 2000 for 2 seconds 36000 for 36 seconds combatTextContents The contents of the combat text broadcasted Examples: PONG! Ping Location combatTextColor The color of the combat text broadcasted, in RGB decimal format. Examples: 16711680 for pure red or #FF0000 65280 for pure green or #00FF00 255 for pure blue or #0000FF Tip You can use a hex to decimal converter to get the decimal values. Alternatively Programmer calculators come built in with hex to decimal","title":"Index"},{"location":"Configuration/#configuration","text":"WorldPingVisualizer allows you to configure a number of options, such as how often pings are visualized, or how the visualizations look","title":"Configuration"},{"location":"Configuration/#configuration-path","text":"By default, the plugin save path is {Working Directory}/config/WorldPingVisualizer/","title":"Configuration Path"},{"location":"Configuration/#configuration-options","text":"","title":"Configuration Options"},{"location":"Configuration/#metadata","text":"This is used by LrndefLib . Please do not touch this unless you know what you are doing","title":"metadata"},{"location":"Configuration/#particles","text":"","title":"particles"},{"location":"Configuration/#enabled","text":"Set to true to enable particles at ping locations","title":"enabled"},{"location":"Configuration/#particlesintervalmilliseconds","text":"The interval(in milliseconds) to broadcast particles Examples: 1000 for 1 second 1500 for 1.5 seconds 2000 for 2 seconds 36000 for 36 seconds","title":"particlesIntervalMilliseconds"},{"location":"Configuration/#particletype","text":"The type of particles to broadcast. More on particle types here","title":"particleType"},{"location":"Configuration/#combattext","text":"","title":"combatText"},{"location":"Configuration/#enabled_1","text":"Set to true to enable combat text at ping locations","title":"enabled"},{"location":"Configuration/#combattextintervalmilliseconds","text":"The interval(in milliseconds) to broadcast combat text Examples: 1000 for 1 second 1500 for 1.5 seconds 2000 for 2 seconds 36000 for 36 seconds","title":"combatTextIntervalMilliseconds"},{"location":"Configuration/#combattextcontents","text":"The contents of the combat text broadcasted Examples: PONG! Ping Location","title":"combatTextContents"},{"location":"Configuration/#combattextcolor","text":"The color of the combat text broadcasted, in RGB decimal format. Examples: 16711680 for pure red or #FF0000 65280 for pure green or #00FF00 255 for pure blue or #0000FF Tip You can use a hex to decimal converter to get the decimal values. Alternatively Programmer calculators come built in with hex to decimal","title":"combatTextColor"},{"location":"Configuration/particle-types/","text":"Particle Types Keybrand Values: Keybrand or 0 Flame Waders Values: FlameWaders or 1 Stellar Tune Values: StellarTune or 2 Goat Mount Values: WallOfFleshGoatMountFlames or 3 Dark Harvest Hit Values: BlackLightningHit or 4 Rainbow Rod Hit Values: RainbowRodHit or 5 Dark Harvest Buff Values: BlackLightningSmall or 6 Stardust Guardian Punches Values: StardustPunch or 7 Resonance Scepter Values: PrincessWeapon or 8","title":"Particle Types"},{"location":"Configuration/particle-types/#particle-types","text":"","title":"Particle Types"},{"location":"Configuration/particle-types/#keybrand","text":"Values: Keybrand or 0","title":"Keybrand"},{"location":"Configuration/particle-types/#flame-waders","text":"Values: FlameWaders or 1","title":"Flame Waders"},{"location":"Configuration/particle-types/#stellar-tune","text":"Values: StellarTune or 2","title":"Stellar Tune"},{"location":"Configuration/particle-types/#goat-mount","text":"Values: WallOfFleshGoatMountFlames or 3","title":"Goat Mount"},{"location":"Configuration/particle-types/#dark-harvest-hit","text":"Values: BlackLightningHit or 4","title":"Dark Harvest Hit"},{"location":"Configuration/particle-types/#rainbow-rod-hit","text":"Values: RainbowRodHit or 5","title":"Rainbow Rod Hit"},{"location":"Configuration/particle-types/#dark-harvest-buff","text":"Values: BlackLightningSmall or 6","title":"Dark Harvest Buff"},{"location":"Configuration/particle-types/#stardust-guardian-punches","text":"Values: StardustPunch or 7","title":"Stardust Guardian Punches"},{"location":"Configuration/particle-types/#resonance-scepter","text":"Values: PrincessWeapon or 8","title":"Resonance Scepter"}]}